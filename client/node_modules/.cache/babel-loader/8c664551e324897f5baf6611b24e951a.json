{"ast":null,"code":"var _jsxFileName = \"/Users/joemacaraig/DirtySoles/client/src/context/CartContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD':\n      return {\n        cart: action.payload\n      };\n\n    case 'REMOVE':\n      return {\n        user: null\n      };\n\n    default:\n      return state;\n  }\n};\nexport const CartContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(authReducer, {\n    cart: []\n  });\n  useEffect(() => {\n    //checks local storage for user\n    //when refresh it should still be logged in\n    const carts = JSON.parse(localStorage.getItem('cart'));\n\n    if (carts) {\n      dispatch({\n        type: 'ADD',\n        payload: cart\n      });\n    }\n  }, []);\n  console.log(\"CartContext state: \", state);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: { ...state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartContextProvider, \"S/63zbz1/VBgwG6Yqu2YMzGqcjw=\");\n\n_c = CartContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartContextProvider\");","map":{"version":3,"names":["createContext","useEffect","useReducer","CartContext","cartReducer","state","action","type","cart","payload","user","CartContextProvider","children","dispatch","authReducer","carts","JSON","parse","localStorage","getItem","console","log"],"sources":["/Users/joemacaraig/DirtySoles/client/src/context/CartContext.js"],"sourcesContent":["import { createContext, useEffect, useReducer } from \"react\";\n\nexport const CartContext = createContext();\n\nexport const cartReducer = (state, action) => {\n    switch(action.type) {\n        case 'ADD': \n            return {cart: action.payload};\n        case 'REMOVE':\n            return {user: null};\n        default: \n            return state;\n    }  \n}\n\nexport const CartContextProvider = ({children}) => {\n    const [state, dispatch] = useReducer(authReducer, {\n        cart: []\n    })\n\n    useEffect(() => {\n\n        //checks local storage for user\n        //when refresh it should still be logged in\n        const carts = JSON.parse(localStorage.getItem('cart'))\n\n        if (carts) {\n            dispatch({type:'ADD', payload: cart})\n        }\n    }, [])\n\n    console.log(\"CartContext state: \", state);\n\n    return (\n        <CartContext.Provider value={{...state, dispatch}}>\n            {children}\n        </CartContext.Provider>\n    )\n}"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,UAAnC,QAAqD,OAArD;;AAEA,OAAO,MAAMC,WAAW,gBAAGH,aAAa,EAAjC;AAEP,OAAO,MAAMI,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EAC1C,QAAOA,MAAM,CAACC,IAAd;IACI,KAAK,KAAL;MACI,OAAO;QAACC,IAAI,EAAEF,MAAM,CAACG;MAAd,CAAP;;IACJ,KAAK,QAAL;MACI,OAAO;QAACC,IAAI,EAAE;MAAP,CAAP;;IACJ;MACI,OAAOL,KAAP;EANR;AAQH,CATM;AAWP,OAAO,MAAMM,mBAAmB,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAACC;EAAD,CAAe;EAC/C,MAAM,CAACP,KAAD,EAAQQ,QAAR,IAAoBX,UAAU,CAACY,WAAD,EAAc;IAC9CN,IAAI,EAAE;EADwC,CAAd,CAApC;EAIAP,SAAS,CAAC,MAAM;IAEZ;IACA;IACA,MAAMc,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAd;;IAEA,IAAIJ,KAAJ,EAAW;MACPF,QAAQ,CAAC;QAACN,IAAI,EAAC,KAAN;QAAaE,OAAO,EAAED;MAAtB,CAAD,CAAR;IACH;EACJ,CATQ,EASN,EATM,CAAT;EAWAY,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmChB,KAAnC;EAEA,oBACI,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE,EAAC,GAAGA,KAAJ;MAAWQ;IAAX,CAA7B;IAAA,UACKD;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAvBM;;GAAMD,mB;;KAAAA,mB"},"metadata":{},"sourceType":"module"}